
package de.othr.external.services.oauth.korbinianSchmidt.session;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SessionService", targetNamespace = "http://impl.service.sw.kschmidt.de/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SessionService {


    /**
     * 
     * @param sessionToken
     * @param targetSiteId
     * @return
     *     returns de.othr.external.services.oauth.korbinianSchmidt.session.SessionLinkDTO
     * @throws SessionServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "prepareLink", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.PrepareLink")
    @ResponseWrapper(localName = "prepareLinkResponse", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.PrepareLinkResponse")
    public SessionLinkDTO prepareLink(
        @WebParam(name = "sessionToken", targetNamespace = "")
        String sessionToken,
        @WebParam(name = "targetSiteId", targetNamespace = "")
        long targetSiteId)
        throws SessionServiceException_Exception
    ;

    /**
     * 
     * @param sessionToken
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validate", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.Validate")
    @ResponseWrapper(localName = "validateResponse", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.ValidateResponse")
    public boolean validate(
        @WebParam(name = "sessionToken", targetNamespace = "")
        String sessionToken);

    /**
     * 
     * @param sessionToken
     * @throws SessionServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "end", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.End")
    @ResponseWrapper(localName = "endResponse", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.EndResponse")
    public void end(
        @WebParam(name = "sessionToken", targetNamespace = "")
        String sessionToken)
        throws SessionServiceException_Exception
    ;

    /**
     * 
     * @param siteToken
     * @param loginData
     * @return
     *     returns de.othr.external.services.oauth.korbinianSchmidt.session.SessionDTO
     * @throws SessionServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.CreateResponse")
    public SessionDTO create(
        @WebParam(name = "siteToken", targetNamespace = "")
        String siteToken,
        @WebParam(name = "loginData", targetNamespace = "")
        LoginDataDTO loginData)
        throws SessionServiceException_Exception
    ;

    /**
     * 
     * @param linkObject
     * @param sessionToken
     * @return
     *     returns de.othr.external.services.oauth.korbinianSchmidt.session.SessionDTO
     * @throws SessionServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "link", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.Link")
    @ResponseWrapper(localName = "linkResponse", targetNamespace = "http://impl.service.sw.kschmidt.de/", className = "de.othr.external.services.oauth.korbinianSchmidt.session.LinkResponse")
    public SessionDTO link(
        @WebParam(name = "sessionToken", targetNamespace = "")
        String sessionToken,
        @WebParam(name = "linkObject", targetNamespace = "")
        SessionLinkDTO linkObject)
        throws SessionServiceException_Exception
    ;

}
